[{"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\index.js":"1","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\App.js":"2","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\reportWebVitals.js":"3","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\components\\Main.js":"4","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\container\\MainContainer.js":"5","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\components\\footer\\Footer.js":"6","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\components\\header\\Header.js":"7","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\components\\menu\\Menu.js":"8","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\components\\warehouse\\Warehouse.js":"9","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\components\\employee\\Employee.js":"10","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\components\\configuration\\Configuration.js":"11","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\components\\van\\Van.js":"12","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\constants\\ActionConstants.js":"13","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\store\\appstore.js":"14","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\reducers\\rootReducer.js":"15","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\reducers\\configReducer.js":"16","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\constants\\AppConstants.js":"17","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\service\\RestClient.js":"18","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\reducers\\empReducer.js":"19","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\reducers\\vanReducer.js":"20","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\reducers\\warehouseReducer.js":"21","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\util\\tableUtil.js":"22","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\index.js":"23","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\App.js":"24","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reportWebVitals.js":"25","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\store\\appstore.js":"26","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reducers\\rootReducer.js":"27","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\Main.js":"28","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reducers\\warehouseReducer.js":"29","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reducers\\vanReducer.js":"30","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reducers\\empReducer.js":"31","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reducers\\configReducer.js":"32","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\footer\\Footer.js":"33","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\constants\\AppConstants.js":"34","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\constants\\ActionConstants.js":"35","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\service\\RestClient.js":"36","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\menu\\Menu.js":"37","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\header\\Header.js":"38","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\container\\MainContainer.js":"39","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\van\\Van.js":"40","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\warehouse\\Warehouse.js":"41","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\employee\\Employee.js":"42","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\configuration\\Configuration.js":"43","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\util\\tableUtil.js":"44","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reducers\\productReducer.js":"45","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\product\\Product.js":"46","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reducers\\customerReducer.js":"47","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\customer\\Customer.js":"48","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reducers\\authReducer.js":"49","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\Auth.js":"50"},{"size":781,"mtime":1606819909641,"results":"51","hashOfConfig":"52"},{"size":217,"mtime":1606413909409,"results":"53","hashOfConfig":"52"},{"size":362,"mtime":499162500000,"results":"54","hashOfConfig":"52"},{"size":2107,"mtime":1606981326222,"results":"55","hashOfConfig":"52"},{"size":1049,"mtime":1606584814168,"results":"56","hashOfConfig":"52"},{"size":416,"mtime":1606585018627,"results":"57","hashOfConfig":"52"},{"size":654,"mtime":1606673624706,"results":"58","hashOfConfig":"52"},{"size":2317,"mtime":1606584631673,"results":"59","hashOfConfig":"52"},{"size":3706,"mtime":1606761083771,"results":"60","hashOfConfig":"52"},{"size":12975,"mtime":1606994255473,"results":"61","hashOfConfig":"52"},{"size":10882,"mtime":1606992052866,"results":"62","hashOfConfig":"52"},{"size":3389,"mtime":1606759974019,"results":"63","hashOfConfig":"52"},{"size":276,"mtime":1606929773837,"results":"64","hashOfConfig":"52"},{"size":615,"mtime":1606655968506,"results":"65","hashOfConfig":"52"},{"size":407,"mtime":1606760712095,"results":"66","hashOfConfig":"52"},{"size":684,"mtime":1606929783872,"results":"67","hashOfConfig":"52"},{"size":261,"mtime":1606918485969,"results":"68","hashOfConfig":"52"},{"size":478,"mtime":1606926463220,"results":"69","hashOfConfig":"52"},{"size":418,"mtime":1606674330749,"results":"70","hashOfConfig":"52"},{"size":398,"mtime":1606758827979,"results":"71","hashOfConfig":"52"},{"size":428,"mtime":1606760635346,"results":"72","hashOfConfig":"52"},{"size":1327,"mtime":1606986728256,"results":"73","hashOfConfig":"52"},{"size":788,"mtime":1607446921818,"results":"74","hashOfConfig":"75"},{"size":217,"mtime":1607446898877,"results":"76","hashOfConfig":"75"},{"size":362,"mtime":499162500000,"results":"77","hashOfConfig":"75"},{"size":615,"mtime":1606655968506,"results":"78","hashOfConfig":"75"},{"size":638,"mtime":1607446812721,"results":"79","hashOfConfig":"75"},{"size":2248,"mtime":1607529397192,"results":"80","hashOfConfig":"75"},{"size":428,"mtime":1606760635346,"results":"81","hashOfConfig":"75"},{"size":398,"mtime":1606758827979,"results":"82","hashOfConfig":"75"},{"size":418,"mtime":1606674330749,"results":"83","hashOfConfig":"75"},{"size":684,"mtime":1606929783872,"results":"84","hashOfConfig":"75"},{"size":416,"mtime":1606585018627,"results":"85","hashOfConfig":"75"},{"size":410,"mtime":1607451362849,"results":"86","hashOfConfig":"75"},{"size":470,"mtime":1607529007637,"results":"87","hashOfConfig":"75"},{"size":1243,"mtime":1607452356756,"results":"88","hashOfConfig":"75"},{"size":2317,"mtime":1606584631673,"results":"89","hashOfConfig":"75"},{"size":654,"mtime":1606673624706,"results":"90","hashOfConfig":"75"},{"size":1315,"mtime":1607278851922,"results":"91","hashOfConfig":"75"},{"size":10929,"mtime":1607262516949,"results":"92","hashOfConfig":"75"},{"size":3706,"mtime":1606761083771,"results":"93","hashOfConfig":"75"},{"size":15416,"mtime":1607529272992,"results":"94","hashOfConfig":"75"},{"size":11492,"mtime":1607452044199,"results":"95","hashOfConfig":"75"},{"size":1836,"mtime":1607258001778,"results":"96","hashOfConfig":"75"},{"size":418,"mtime":1607271211567,"results":"97","hashOfConfig":"75"},{"size":15291,"mtime":1607277881293,"results":"98","hashOfConfig":"75"},{"size":423,"mtime":1607278753735,"results":"99","hashOfConfig":"75"},{"size":13341,"mtime":1607279189725,"results":"100","hashOfConfig":"75"},{"size":426,"mtime":1607446757984,"results":"101","hashOfConfig":"75"},{"size":2980,"mtime":1607451832210,"results":"102","hashOfConfig":"75"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},"17zg87x",{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"105"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"105"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"105"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"105"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"105"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"105"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"105"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},"1qtw2r3",{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"157"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"157"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"157"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"157"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"157"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"157"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"157"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"198","messages":"199","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"157"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"157"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"157"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"157"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"157"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"157"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"157"},"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\index.js",[],["221","222"],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\App.js",["223"],"import React,{Component} from 'react';\nimport Main from './components/Main';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">      \n      <Main></Main>\n    </div>\n  );\n}\n\nexport default App;\n","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\reportWebVitals.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\components\\Main.js",["224"],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\container\\MainContainer.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\components\\footer\\Footer.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\components\\header\\Header.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\components\\menu\\Menu.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\components\\warehouse\\Warehouse.js",["225"],"import React,{Component} from 'react';\r\nimport { getCall } from '../../service/RestClient';\r\nimport { Container, Card, Button, Table } from 'react-bootstrap';\r\nimport { IN_PROGRESS } from '../../constants/ActionConstants';\r\nimport { connect } from \"react-redux\";\r\nimport { LIST_WAREHOUSE } from '../../constants/AppConstants';\r\nimport { SET_WAREHOUSE } from '../../constants/ActionConstants';\r\n\r\nclass Warehouse extends Component{\r\n\r\n    componentDidMount() {\r\n        this.listWarehouse();\r\n    }\r\n\r\n    listWarehouse = () => {\r\n        this.props.setInProgress(true);\r\n        getCall(LIST_WAREHOUSE).then(res => {\r\n            if (res.status === 200) {\r\n                this.props.listWarehouse(res.data);\r\n                this.props.setInProgress(false);\r\n            }\r\n            else {\r\n                this.props.setInProgress(false);\r\n            }\r\n        })\r\n            .catch(exp => {\r\n                this.props.setInProgress(false);\r\n                console.log(exp);\r\n            });\r\n    };\r\n\r\n    render(){\r\n        return ( \r\n        <Container fluid className=\"app-container\">\r\n        <Card>\r\n            <Card.Header as=\"span\">Warehouse</Card.Header>\r\n            <Card.Body>\r\n            {\r\n                            this.props.warehouse !== undefined && this.props.warehouse !== null &&\r\n                                this.props.warehouse.data !== undefined && this.props.warehouse.data !== null ? (\r\n                                    <Table responsive striped bordered hover size=\"sm\" >\r\n                                        <thead>\r\n                                            <tr>\r\n                                            <th>WAREHOUSE_ID</th>\r\n                                            <th>WAREHOUSE_NAME</th>\r\n                                            <th>WAREHOUSE_ADDRESS</th>\r\n                                            <th>WAREHOUSE_CONTACT</th>\r\n                                            <th>ACTIVE_STATUS</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.props.warehouse.data.map((data, i) => {\r\n                                                return (\r\n                                                    <tr>\r\n                                                        <td>{data.WAREHOUSE_ID}</td>\r\n                                                        <td>{data.WAREHOUSE_NAME}</td>\r\n                                                        <td>{data.WAREHOUSE_ADDRESS}</td>       \r\n                                                        <td>{data.WAREHOUSE_CONTACT}</td>                                                   \r\n                                                        <td>{data.ACTIVE_STATUS ? \"Active\" : \"Inactive\"}</td>\r\n                                                    </tr>)\r\n                                            })\r\n                                            }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                ) :\r\n                                null\r\n                        }\r\n            </Card.Body>    \r\n        </Card>\r\n        </Container>\r\n        );\r\n    }\r\n    \r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setInProgress: flag => dispatch({ type: IN_PROGRESS, payload: flag }),\r\n    listWarehouse: data => dispatch({ type: SET_WAREHOUSE, payload: data })\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    inProgress: state.config.inProgress,\r\n    warehouse: state.warehouse.warehouse\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Warehouse);","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\components\\employee\\Employee.js",["226","227"],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\components\\configuration\\Configuration.js",["228","229"],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\components\\van\\Van.js",["230"],"import React,{Component} from 'react';\r\nimport { getCall } from '../../service/RestClient';\r\nimport { Container, Card, Button, Table } from 'react-bootstrap';\r\nimport { IN_PROGRESS } from '../../constants/ActionConstants';\r\nimport { connect } from \"react-redux\";\r\nimport { LIST_VAN } from '../../constants/AppConstants';\r\nimport { SET_VAN } from '../../constants/ActionConstants';\r\n\r\nclass Van extends Component{\r\n\r\n    componentDidMount() {\r\n        this.listVan();\r\n    }\r\n\r\n    listVan = () => {\r\n        this.props.setInProgress(true);\r\n        getCall(LIST_VAN).then(res => {\r\n            if (res.status === 200) {\r\n                this.props.listVan(res.data);\r\n                this.props.setInProgress(false);\r\n            }\r\n            else {\r\n                this.props.setInProgress(false);\r\n            }\r\n        })\r\n            .catch(exp => {\r\n                this.props.setInProgress(false);\r\n                console.log(exp);\r\n            });\r\n    };\r\n\r\n    render(){\r\n        return ( \r\n        <Container fluid className=\"app-container\">\r\n        <Card>\r\n            <Card.Header as=\"span\">Van</Card.Header>\r\n            <Card.Body>\r\n            {\r\n                            this.props.van !== undefined && this.props.van !== null &&\r\n                                this.props.van.data !== undefined && this.props.van.data !== null ? (\r\n                                    <Table responsive striped bordered hover size=\"sm\" >\r\n                                        <thead>\r\n                                            <tr>\r\n                                            <th>VAN_ID</th>\r\n                                            <th>VAN_NUMBER</th>\r\n                                            <th>VAN_NAME</th>\r\n                                            <th>ACTIVE_STATUS</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.props.van.data.map((data, i) => {\r\n                                                return (\r\n                                                    <tr>\r\n                                                        <td>{data.VAN_ID}</td>\r\n                                                        <td>{data.VAN_NUMBER}</td>\r\n                                                        <td>{data.VAN_NAME}</td>                                                        \r\n                                                        <td>{data.ACTIVE_STATUS ? \"Active\" : \"Inactive\"}</td>\r\n                                                    </tr>)\r\n                                            })\r\n                                            }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                ) :\r\n                                null\r\n                        }\r\n            </Card.Body>    \r\n        </Card>\r\n        </Container>\r\n        );\r\n    }\r\n    \r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setInProgress: flag => dispatch({ type: IN_PROGRESS, payload: flag }),\r\n    listVan: data => dispatch({ type: SET_VAN, payload: data })\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    inProgress: state.config.inProgress,\r\n    van: state.van.van\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Van);","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\constants\\ActionConstants.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\store\\appstore.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\reducers\\rootReducer.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\reducers\\configReducer.js",["231","232","233","234"],"import {\r\n    SET_APP_CONFIGURATION,\r\n    ADD_NEW_APP_CONFIGURATION,\r\n    IN_PROGRESS\r\n} from '../constants/ActionConstants';\r\n\r\nconst initialState = {\r\n    configuration: [],\r\n    inProgress: false\r\n};\r\n\r\nfunction configReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_APP_CONFIGURATION:\r\n            return {\r\n                ...state,\r\n                configuration: action.payload\r\n            }\r\n            break;\r\n        \r\n        case IN_PROGRESS:\r\n            return {\r\n                ...state,\r\n                inProgress: action.payload\r\n            }\r\n            break;\r\n    }\r\n    return state;\r\n}\r\n\r\nexport default configReducer; ","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\constants\\AppConstants.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\service\\RestClient.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\reducers\\empReducer.js",["235","236"],"import {\r\n    SET_EMPLOYEE\r\n} from '../constants/ActionConstants';\r\n\r\nconst initialState = {\r\n    employee: []\r\n};\r\n\r\nfunction empReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_EMPLOYEE:\r\n            return {\r\n                ...state,\r\n                employee: action.payload\r\n            }\r\n            break;       \r\n    }\r\n    return state;\r\n}\r\n\r\nexport default empReducer; ","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\reducers\\vanReducer.js",["237","238"],"import {\r\n    SET_VAN\r\n} from '../constants/ActionConstants';\r\n\r\nconst initialState = {\r\n    van: []\r\n};\r\n\r\nfunction vanReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_VAN:\r\n            return {\r\n                ...state,\r\n                van: action.payload\r\n            }\r\n            break;       \r\n    }\r\n    return state;\r\n}\r\n\r\nexport default vanReducer; ","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\reducers\\warehouseReducer.js",["239","240"],"import {\r\n    SET_WAREHOUSE\r\n} from '../constants/ActionConstants';\r\n\r\nconst initialState = {\r\n    van: []\r\n};\r\n\r\nfunction warehouseReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_WAREHOUSE:\r\n            return {\r\n                ...state,\r\n                warehouse: action.payload\r\n            }\r\n            break;       \r\n    }\r\n    return state;\r\n}\r\n\r\nexport default warehouseReducer; ","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\van-distribution-ui\\van-distribution-app\\src\\util\\tableUtil.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\index.js",[],["241","242"],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\App.js",["243"],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reportWebVitals.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\store\\appstore.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reducers\\rootReducer.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\Main.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reducers\\warehouseReducer.js",["244","245"],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reducers\\vanReducer.js",["246","247"],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reducers\\empReducer.js",["248","249"],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reducers\\configReducer.js",["250","251","252","253"],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\footer\\Footer.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\constants\\AppConstants.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\constants\\ActionConstants.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\service\\RestClient.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\menu\\Menu.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\header\\Header.js",[],["254","255"],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\container\\MainContainer.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\van\\Van.js",["256","257","258"],"import React, { Component } from 'react';\r\nimport { getCall, putCall, postCall, deleteCall } from '../../service/RestClient';\r\nimport { Container, Card, Button, ButtonGroup, Badge } from 'react-bootstrap';\r\nimport { IN_PROGRESS } from '../../constants/ActionConstants';\r\nimport { connect } from \"react-redux\";\r\nimport { LIST_VAN } from '../../constants/AppConstants';\r\nimport { SET_VAN } from '../../constants/ActionConstants';\r\n\r\nimport { pageinationOptions, ACTIVE_STATUS_OPTIONS } from '../../util/tableUtil'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport _ from 'underscore';\r\n\r\nimport { FaFilter, FaPlusCircle, FaSave, FaTrash } from 'react-icons/fa'\r\n\r\nclass Van extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [],\r\n            toggleFilter: false\r\n        };\r\n\r\n        this.updateAndSave.bind(this);\r\n        this.deleteAndSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.listVan();\r\n    }\r\n\r\n    getConfiguration = (type) => {\r\n        var array = _.filter(this.props.configuration.data, function (object) { return object.PROPERTY_TYPE === type; });\r\n        return _.map(array, function (object) {\r\n            return { value: object.PROPERTY_ID, label: object.PROPERTY_VALUE };\r\n        });\r\n    }\r\n\r\n    listVan = () => {\r\n        this.props.setInProgress(true);\r\n        getCall(LIST_VAN).then(res => {\r\n            if (res.status === 200) {\r\n                this.props.listVan(res.data);\r\n                this.props.setInProgress(false);\r\n            }\r\n            else {\r\n                this.props.setInProgress(false);\r\n            }\r\n        })\r\n            .catch(exp => {\r\n                this.props.setInProgress(false);\r\n                console.log(exp);\r\n            });\r\n    };\r\n\r\n\r\n    addNewEmpltyRecord = () => {\r\n        this.props.setInProgress(true);\r\n        var vanData = this.props.van;\r\n        vanData.data.unshift({\r\n            VAN_ID: null,\r\n            VAN_NUMBER: null,\r\n            VAN_NAME: null,\r\n            ACTIVE_STATUS: false\r\n        });\r\n        this.props.addNewEmpltyRecord(vanData);\r\n        this.props.setInProgress(false);\r\n    }\r\n\r\n    toggleFilter = () => {\r\n        this.setState({ toggleFilter: !this.state.toggleFilter });\r\n    };\r\n\r\n    updateAndSave = (cell, row, rowIndex) => {\r\n        this.props.setInProgress(true);\r\n        if (row !== null && row !== undefined) {\r\n            if (row.VAN_ID === null || row.VAN_ID === undefined || row.VAN_ID === \"\") { // add new record\r\n                var data = {};\r\n                data[\"VAN_ID\"] = row.VAN_ID;\r\n                data[\"VAN_NAME\"] = row.VAN_NAME;\r\n                data[\"VAN_NUMBER\"] = row.VAN_NUMBER;\r\n\r\n                var _typeof = typeof row.ACTIVE_STATUS\r\n                if (_typeof === \"string\") {\r\n                    if (row.ACTIVE_STATUS === \"true\") { row.ACTIVE_STATUS = true; }\r\n                    else { row.ACTIVE_STATUS = false };\r\n                }\r\n                data[\"ACTIVE_STATUS\"] = row.ACTIVE_STATUS;\r\n\r\n                postCall(LIST_VAN, data).then(res => {\r\n                    if (res.status === 201) {\r\n                        this.listVan();\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                    else {\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                })\r\n                    .catch(exp => {\r\n                        this.props.setInProgress(false);\r\n                        console.log(exp);\r\n                    });\r\n            }\r\n            else { // update record\r\n                var data = {};\r\n\r\n                data[\"VAN_ID\"] = row.VAN_ID;\r\n                data[\"VAN_NAME\"] = row.VAN_NAME;\r\n                data[\"VAN_NUMBER\"] = row.VAN_NUMBER;\r\n\r\n                var _typeof = typeof row.ACTIVE_STATUS\r\n                if (_typeof === \"string\") {\r\n                    if (row.ACTIVE_STATUS === \"true\") { row.ACTIVE_STATUS = true; }\r\n                    else { row.ACTIVE_STATUS = false };\r\n                }\r\n                data[\"ACTIVE_STATUS\"] = row.ACTIVE_STATUS;\r\n\r\n                putCall(LIST_VAN.concat(\"/\").concat(row.VAN_ID), data).then(res => {\r\n                    if (res.status === 200) {\r\n                        this.listVan();\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                    else {\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                })\r\n                    .catch(exp => {\r\n                        this.props.setInProgress(false);\r\n                        console.log(exp);\r\n                    });\r\n            }\r\n        }\r\n        else { // error\r\n            this.props.setInProgress(false);\r\n        }\r\n    };\r\n\r\n    deleteAndSave = (cell, row, rowIndex) => {\r\n        if (row !== null && row !== undefined) {\r\n            if (row.VAN_ID === null || row.VAN_ID === undefined || row.VAN_ID === \"\") { // delete from cache\r\n                this.listEmployee();\r\n            }\r\n            else {  // delete from db                \r\n                this.props.setInProgress(true);\r\n                deleteCall(LIST_VAN.concat(\"/\").concat(row.VAN_ID)).then(res => {\r\n                    if (res.status === 200) {\r\n                        this.listEmployee();\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                    else {\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                })\r\n                    .catch(exp => {\r\n                        this.props.setInProgress(false);\r\n                        console.log(exp);\r\n                    });\r\n            }\r\n        }\r\n        else { // error\r\n            this.props.setInProgress(false);\r\n        }\r\n    };\r\n\r\n    saveAll = () => { };\r\n\r\n    actionButton = (cell, row, rowIndex) => {\r\n        return (\r\n            <ButtonGroup size=\"sm\">\r\n                <Button variant=\"success\" size=\"sm\" onClick={() => { this.updateAndSave(cell, row, rowIndex) }}><FaSave /></Button>\r\n                <Button variant=\"danger\" size=\"sm\" onClick={() => { this.deleteAndSave(cell, row, rowIndex) }}><FaTrash /></Button>\r\n            </ButtonGroup>\r\n        )\r\n    };\r\n\r\n    getTableColumn = (data) => {\r\n        if (data !== null && data !== undefined) {\r\n            var keys = Object.keys(data);\r\n\r\n            var columnsArray = keys.map(key => {\r\n                if (key === 'ACTIVE_STATUS') {\r\n                    return {\r\n                        dataField: key,\r\n                        text: key,\r\n                        sort: true,\r\n                        type: 'bool',\r\n                        editor: {\r\n                            type: Type.CHECKBOX,\r\n                            value: 'true:false'\r\n                        },\r\n                        formatter: (cell) => {\r\n                            return cell ? (<Badge variant=\"success\">Active</Badge>) : (<Badge variant=\"danger\">InActive</Badge>)\r\n                        },\r\n                        filter: this.state.toggleFilter ? textFilter() : false\r\n                    };\r\n                }\r\n                else {\r\n                    return {\r\n                        dataField: key,\r\n                        text: key,\r\n                        sort: true,\r\n                        filter: this.state.toggleFilter ? textFilter() : false\r\n                    }\r\n                }\r\n            }\r\n            );\r\n\r\n            columnsArray.push({\r\n                text: \"ACTION\",\r\n                formatter: this.actionButton,\r\n                editable: false,\r\n                headerStyle: () => {\r\n                    return { width: \"8%\" };\r\n                },\r\n            });\r\n\r\n            return columnsArray\r\n        }\r\n        return [];\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid className=\"app-container\">\r\n                <Card>\r\n                    <Card.Header as=\"span\">Van\r\n            <ButtonGroup size=\"sm\" style={{ float: \"right\", marginBottom: \"2px\" }}>\r\n                            <Button variant=\"success\" size=\"sm\" onClick={() => { this.addNewEmpltyRecord() }}><FaPlusCircle />  Add New</Button>\r\n                            <Button variant=\"success\" size=\"sm\" onClick={() => { this.toggleFilter() }}><FaFilter />  Filter</Button>\r\n                            <Button variant=\"success\" size=\"sm\" onClick={() => { this.saveAll() }}><FaSave />  Save All</Button>\r\n                        </ButtonGroup>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n                        {\r\n                            this.props.van !== undefined && this.props.van !== null &&\r\n                                this.props.van.data !== undefined && this.props.van.data !== null ? (\r\n                                    <div>\r\n                                        <BootstrapTable\r\n                                            keyField=\"VAN_ID\"\r\n                                            data={this.props.van.data}\r\n                                            columns={this.getTableColumn(this.props.van.data[0])}\r\n                                            striped\r\n                                            bootstrap4\r\n                                            hover\r\n                                            condensed\r\n                                            tabIndexCell\r\n                                            filter={filterFactory()}\r\n                                            pagination={paginationFactory(pageinationOptions(this.props.van.data.length))}\r\n                                            headerWrapperClasses=\"tbl-head\"\r\n                                            cellEdit={cellEditFactory({\r\n                                                mode: 'click',\r\n                                                blurToSave: true\r\n                                            })}\r\n                                        />\r\n                                    </div>\r\n                                ) :\r\n                                null\r\n                        }\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setInProgress: flag => dispatch({ type: IN_PROGRESS, payload: flag }),\r\n    listVan: data => dispatch({ type: SET_VAN, payload: data }),\r\n    addNewEmpltyRecord: data => dispatch({ type: SET_VAN, payload: data })\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    inProgress: state.config.inProgress,\r\n    van: state.van.van\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Van);","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\warehouse\\Warehouse.js",["259"],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\employee\\Employee.js",["260","261","262","263","264","265","266"],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\configuration\\Configuration.js",["267","268","269","270"],"import React, { Component } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { getCall, postCall, deleteCall, putCall } from '../../service/RestClient';\r\nimport { IN_PROGRESS, SET_APP_CONFIGURATION } from '../../constants/ActionConstants';\r\nimport { LIST_APP_CONFIGURATION } from '../../constants/AppConstants';\r\nimport { pageinationOptions, ACTIVE_STATUS_OPTIONS, PROPERTY_TYPES_OPTIONS } from '../../util/tableUtil'\r\nimport { Container, Card, Button, ButtonGroup ,Badge} from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport _ from 'underscore';\r\n\r\nimport { FaFilter, FaPlusCircle, FaSave, FaTrash } from 'react-icons/fa'\r\n\r\nclass Configuration extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [],\r\n            toggleFilter: false\r\n        };\r\n\r\n        this.updateAndSave.bind(this);\r\n        this.deleteAndSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.listConfiguration();\r\n    }\r\n\r\n    listConfiguration = () => {\r\n        this.props.setInProgress(true);\r\n        getCall(LIST_APP_CONFIGURATION).then(res => {\r\n            if (res.status === 200) {\r\n                this.props.listConfiguration(res.data);\r\n                this.props.setInProgress(false);\r\n            }\r\n            else {\r\n                this.props.setInProgress(false);\r\n            }\r\n        })\r\n            .catch(exp => {\r\n                this.props.setInProgress(false);\r\n                console.log(exp);\r\n            });\r\n    };\r\n\r\n    addNewEmpltyRecord = () => {\r\n\r\n        this.props.setInProgress(true);\r\n        var configuration = this.props.configuration;\r\n        configuration.data.unshift({\r\n            PROPERTY_ID: null,\r\n            PROPERTY_TYPE: null,\r\n            PROPERTY_VALUE: null,\r\n            ACTIVE_STATUS: false\r\n        });\r\n        this.props.addNewEmpltyRecord(configuration);\r\n        this.props.setInProgress(false);\r\n    }\r\n\r\n\r\n    toggleFilter = () => {\r\n        this.setState({ toggleFilter: !this.state.toggleFilter });\r\n    };\r\n\r\n\r\n    addNewRecord = () => {\r\n\r\n    };\r\n\r\n\r\n    saveAll = () => {\r\n\r\n    };\r\n\r\n    updateAndSave = (cell, row, rowIndex) => {\r\n        this.props.setInProgress(true);\r\n        if (row !== null && row !== undefined) {\r\n            if (row.PROPERTY_ID === null || row.PROPERTY_ID === undefined || row.PROPERTY_ID === \"\") { // add new record\r\n                var data = {};\r\n                data[\"PROPERTY_TYPE\"] = row.PROPERTY_TYPE;\r\n                data[\"PROPERTY_VALUE\"] = row.PROPERTY_VALUE;\r\n\r\n                var _typeof = typeof row.ACTIVE_STATUS\r\n                if (_typeof === \"string\") {\r\n                    if (row.ACTIVE_STATUS === \"true\") { row.ACTIVE_STATUS = true; }\r\n                    else { row.ACTIVE_STATUS = false };\r\n                }\r\n                data[\"ACTIVE_STATUS\"] = row.ACTIVE_STATUS;\r\n\r\n                postCall(LIST_APP_CONFIGURATION, data).then(res => {\r\n                    if (res.status === 201) {\r\n                        this.listConfiguration();\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                    else {\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                })\r\n                    .catch(exp => {\r\n                        this.props.setInProgress(false);\r\n                        console.log(exp);\r\n                    });\r\n            }\r\n            else { // update record\r\n                var data = {};\r\n                data[\"PROPERTY_ID\"] = row.PROPERTY_ID;\r\n                data[\"PROPERTY_TYPE\"] = row.PROPERTY_TYPE;\r\n                data[\"PROPERTY_VALUE\"] = row.PROPERTY_VALUE;\r\n\r\n                var _typeof = typeof row.ACTIVE_STATUS\r\n                if (_typeof === \"string\") {\r\n                    if (row.ACTIVE_STATUS === \"true\") { row.ACTIVE_STATUS = true; }\r\n                    else { row.ACTIVE_STATUS = false };\r\n                }\r\n                data[\"ACTIVE_STATUS\"] = row.ACTIVE_STATUS;\r\n\r\n                putCall(LIST_APP_CONFIGURATION.concat(\"/\").concat(row.PROPERTY_ID), data).then(res => {\r\n                    if (res.status === 200) {\r\n                        this.listConfiguration();\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                    else {\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                })\r\n                    .catch(exp => {\r\n                        this.props.setInProgress(false);\r\n                        console.log(exp);\r\n                    });\r\n            }\r\n\r\n        }\r\n        else { // error\r\n            this.props.setInProgress(false);\r\n        }\r\n    };\r\n\r\n    deleteAndSave = (cell, row, rowIndex) => {\r\n        if (row !== null && row !== undefined) {\r\n            if (row.PROPERTY_ID === null || row.PROPERTY_ID === undefined || row.PROPERTY_ID === \"\") { // delete from cache\r\n                this.listConfiguration();\r\n            }\r\n            else {  // delete from db                \r\n                this.props.setInProgress(true);\r\n                deleteCall(LIST_APP_CONFIGURATION.concat(\"/\").concat(row.PROPERTY_ID)).then(res => {\r\n                    if (res.status === 200) {\r\n                        this.listConfiguration();\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                    else {\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                })\r\n                    .catch(exp => {\r\n                        this.props.setInProgress(false);\r\n                        console.log(exp);\r\n                    });\r\n            }\r\n        }\r\n        else { // error\r\n            this.props.setInProgress(false);\r\n        }\r\n    };\r\n\r\n    actionButton = (cell, row, rowIndex) => {\r\n        return (\r\n            <ButtonGroup size=\"sm\">\r\n                <Button variant=\"success\" size=\"sm\" onClick={() => { this.updateAndSave(cell, row, rowIndex) }}><FaSave /></Button>\r\n                <Button variant=\"danger\" size=\"sm\" onClick={() => { this.deleteAndSave(cell, row, rowIndex) }}><FaTrash /></Button>\r\n            </ButtonGroup>\r\n        )\r\n    };\r\n\r\n\r\n\r\n\r\n    getTableColumn = (data) => {\r\n        if (data !== null && data !== undefined) {\r\n\r\n\r\n            var keys = Object.keys(data);\r\n\r\n            var columnsArray = keys.map(key => {\r\n\r\n                if (key === 'ACTIVE_STATUS') {\r\n                    return {\r\n                        dataField: key,\r\n                        text: key,\r\n                        sort: true,\r\n                        type: 'bool',\r\n                        editor: {\r\n                            type: Type.CHECKBOX,\r\n                            value: 'true:false'\r\n                        },\r\n                        formatter: (cell) => {\r\n                            return cell ? (<Badge variant=\"success\">Active</Badge>) : (<Badge variant=\"danger\">InActive</Badge>)\r\n                        },\r\n                        filter: this.state.toggleFilter ? textFilter() : false\r\n                    };\r\n                }\r\n                else if (key === 'PROPERTY_TYPE') {\r\n                    return {\r\n                        dataField: \"PROPERTY_TYPE\",\r\n                        text: \"PROPERTY_TYPE\",\r\n                        sort: true,\r\n                        editor: {\r\n                            type: Type.SELECT,\r\n                            options: PROPERTY_TYPES_OPTIONS\r\n                        },\r\n                        filter: this.state.toggleFilter ? textFilter() : false\r\n                    };\r\n                }\r\n                else {\r\n                    return {\r\n                        dataField: key,\r\n                        text: key,\r\n                        sort: true,\r\n                        filter: this.state.toggleFilter ? textFilter() : false\r\n                    };\r\n\r\n                }\r\n\r\n\r\n            });\r\n\r\n            columnsArray.push({\r\n                text: \"ACTION\",\r\n                formatter: this.actionButton,\r\n                editable: false\r\n            })\r\n\r\n\r\n            return columnsArray\r\n        }\r\n        return [];\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid className=\"app-container\">\r\n                <Card>\r\n                    <Card.Header as=\"Row\" >Configuration\r\n                    <ButtonGroup size=\"sm\" style={{ float: \"right\", marginBottom: \"2px\" }}>\r\n                            <Button variant=\"success\" size=\"sm\" onClick={() => { this.addNewEmpltyRecord() }}><FaPlusCircle />  Add New</Button>\r\n                            <Button variant=\"success\" size=\"sm\" onClick={() => { this.toggleFilter() }}><FaFilter />  Filter</Button>\r\n                            <Button variant=\"success\" size=\"sm\" onClick={() => { this.saveAll() }}><FaSave />  Save All</Button>\r\n                        </ButtonGroup>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n\r\n                        {\r\n                            this.props.configuration !== undefined && this.props.configuration !== null &&\r\n                                this.props.configuration.data !== undefined && this.props.configuration.data !== null ? (\r\n                                    <div>\r\n                                        <BootstrapTable\r\n                                            keyField=\"PROPERTY_ID\"\r\n                                            data={this.props.configuration.data}\r\n                                            columns={this.getTableColumn(this.props.configuration.data[0])}\r\n                                            striped\r\n                                            hover\r\n                                            condensed\r\n                                            tabIndexCell\r\n                                            bootstrap4\r\n                                            filter={filterFactory()}\r\n                                            pagination={paginationFactory(pageinationOptions(this.props.configuration.data.length))}\r\n                                            headerWrapperClasses=\"tbl-head\"\r\n                                            cellEdit={cellEditFactory({\r\n                                                mode: 'click',\r\n                                                blurToSave: true\r\n                                            })}\r\n                                        />\r\n                                    </div>\r\n                                ) :\r\n                                null\r\n                        }\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setInProgress: flag => dispatch({ type: IN_PROGRESS, payload: flag }),\r\n    listConfiguration: data => dispatch({ type: SET_APP_CONFIGURATION, payload: data }),\r\n    addNewEmpltyRecord: data => dispatch({ type: SET_APP_CONFIGURATION, payload: data })\r\n\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    inProgress: state.config.inProgress,\r\n    configuration: state.config.configuration,\r\n    loginUser:state.auth.loginUser\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Configuration);","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\util\\tableUtil.js",[],"E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reducers\\productReducer.js",["271","272"],"import {\r\n    SET_PRODUCT\r\n} from '../constants/ActionConstants';\r\n\r\nconst initialState = {\r\n    van: []\r\n};\r\n\r\nfunction productReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_PRODUCT:\r\n            return {\r\n                ...state,\r\n                product: action.payload\r\n            }\r\n            break;       \r\n    }\r\n    return state;\r\n}\r\n\r\nexport default productReducer; ","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\product\\Product.js",["273","274","275","276","277"],"import React, { Component } from 'react';\r\nimport { getCall, putCall, postCall, deleteCall } from '../../service/RestClient';\r\nimport { Container, Card, Button, ButtonGroup , Badge } from 'react-bootstrap';\r\nimport { IN_PROGRESS } from '../../constants/ActionConstants';\r\nimport { connect } from \"react-redux\";\r\nimport { LIST_PRODUCT } from '../../constants/AppConstants';\r\nimport { SET_PRODUCT } from '../../constants/ActionConstants';\r\n\r\nimport { pageinationOptions, ACTIVE_STATUS_OPTIONS } from '../../util/tableUtil'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport _ from 'underscore';\r\n\r\nimport { FaFilter, FaPlusCircle, FaSave, FaTrash } from 'react-icons/fa'\r\n\r\nclass Product extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [],\r\n            toggleFilter: false\r\n        };\r\n\r\n        this.updateAndSave.bind(this);\r\n        this.deleteAndSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.listProduct();\r\n    }\r\n\r\n    listProduct = () => {\r\n        this.props.setInProgress(true);\r\n        getCall(LIST_PRODUCT).then(res => {\r\n            if (res.status === 200) {\r\n                this.props.listProduct(res.data);\r\n                this.props.setInProgress(false);\r\n            }\r\n            else {\r\n                this.props.setInProgress(false);\r\n            }\r\n        })\r\n        .catch(exp => {\r\n            this.props.setInProgress(false);\r\n            console.log(exp);\r\n        });\r\n    };\r\n\r\n\r\n    getConfiguration = (type) => {\r\n        var array = _.filter(this.props.configuration.data, function (object) { return object.PROPERTY_TYPE === type; });\r\n        return _.map(array, function (object) {\r\n           return { value: object.PROPERTY_ID, label: object.PROPERTY_VALUE };\r\n        });\r\n    }\r\n\r\n    addNewEmpltyRecord = () => {\r\n\r\n        this.props.setInProgress(true);\r\n        var productData = this.props.product;\r\n        productData.data.unshift({\r\n            PRODUCT_ID : null,\r\n            PRODUCT_CODE : null,\r\n            PRODUCT_NAME : null,\r\n            HSN_CODE : null,\r\n            PRODUCT_DESC : null,\r\n            PROD_COMPANY_ID: null,\r\n            PROD_UNIT_ID : null,\r\n            PROD_UNIT_QUANTITY : null,\r\n            PRODUCT_MRP: null,\r\n            PROD_CGST_PER: null,\r\n            PROD_SGST_PER: null,\r\n            PRODUCT_RATE: null,\r\n            ACTIVE_STATUS: false\r\n        });\r\n        this.props.addNewEmpltyRecord(productData);\r\n        this.props.setInProgress(false);\r\n    }\r\n\r\n    toggleFilter = () => {\r\n        this.setState({ toggleFilter: !this.state.toggleFilter });\r\n    };\r\n\r\n    updateAndSave = (cell, row, rowIndex) => {\r\n        this.props.setInProgress(true);\r\n        if (row !== null && row !== undefined) {\r\n            if (row.PRODUCT_ID === null || row.PRODUCT_ID === undefined || row.PRODUCT_ID === \"\") { // add new record\r\n                var data = {};        \r\n\r\n                data[\"PRODUCT_ID\"] = row.PRODUCT_ID;\r\n                data[\"PRODUCT_CODE\"] = row.PRODUCT_CODE;\r\n                data[\"PRODUCT_NAME\"] = row.PRODUCT_NAME;\r\n                data[\"HSN_CODE\"] = row.HSN_CODE;\r\n                data[\"PRODUCT_DESC\"] = row.PRODUCT_DESC;\r\n                data[\"PROD_COMPANY_ID\"] = row.PROD_COMPANY_ID;\r\n                data[\"PROD_UNIT_ID\"] = row.PROD_UNIT_ID;\r\n                data[\"PROD_UNIT_QUANTITY\"] = parseInt(row.PROD_UNIT_QUANTITY);\r\n                data[\"PRODUCT_MRP\"] = parseFloat(row.PRODUCT_MRP);\r\n                data[\"PROD_CGST_PER\"] = parseFloat(row.PROD_CGST_PER);\r\n                data[\"PROD_SGST_PER\"] = parseFloat(row.PROD_SGST_PER);\r\n                data[\"PRODUCT_RATE\"] = row.PRODUCT_RATE;\r\n                data[\"ACTIVE_STATUS\"] = false;\r\n\r\n                var _typeof = typeof row.ACTIVE_STATUS\r\n                if (_typeof === \"string\") {\r\n                    if (row.ACTIVE_STATUS === \"true\") { row.ACTIVE_STATUS = true; }\r\n                    else { row.ACTIVE_STATUS = false };\r\n                }\r\n                data[\"ACTIVE_STATUS\"] = row.ACTIVE_STATUS;\r\n\r\n                postCall(LIST_PRODUCT, data).then(res => {\r\n                    if (res.status === 201) {\r\n                        this.listProduct();\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                    else {\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                })\r\n                .catch(exp => {\r\n                    this.props.setInProgress(false);\r\n                    console.log(exp);\r\n                });\r\n            }\r\n            else { // update record\r\n                var data = {};\r\n\r\n                data[\"PRODUCT_ID\"] = row.PRODUCT_ID;\r\n                data[\"PRODUCT_CODE\"] = row.PRODUCT_CODE;\r\n                data[\"PRODUCT_NAME\"] = row.PRODUCT_NAME;\r\n                data[\"HSN_CODE\"] = row.HSN_CODE;\r\n                data[\"PRODUCT_DESC\"] = row.PRODUCT_DESC;\r\n                data[\"PROD_COMPANY_ID\"] = row.PROD_COMPANY_ID;\r\n                data[\"PROD_UNIT_ID\"] = row.PROD_UNIT_ID;\r\n                data[\"PROD_UNIT_QUANTITY\"] = parseInt(row.PROD_UNIT_QUANTITY);\r\n                data[\"PRODUCT_MRP\"] = parseFloat(row.PRODUCT_MRP);\r\n                data[\"PROD_CGST_PER\"] = parseFloat(row.PROD_CGST_PER);\r\n                data[\"PROD_SGST_PER\"] = parseFloat(row.PROD_SGST_PER);\r\n                data[\"PRODUCT_RATE\"] = [];\r\n                data[\"ACTIVE_STATUS\"] = false;\r\n\r\n                var _typeof = typeof row.ACTIVE_STATUS\r\n                if (_typeof === \"string\") {\r\n                    if (row.ACTIVE_STATUS === \"true\") { row.ACTIVE_STATUS = true; }\r\n                    else { row.ACTIVE_STATUS = false };\r\n                }\r\n                data[\"ACTIVE_STATUS\"] = row.ACTIVE_STATUS;\r\n\r\n                putCall(LIST_PRODUCT.concat(\"/\").concat(row.EMP_ID), data).then(res => {\r\n                    if (res.status === 200) {\r\n                        this.listProduct();\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                    else {\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                })\r\n                .catch(exp => {\r\n                    this.props.setInProgress(false);\r\n                    console.log(exp);\r\n                });\r\n            }\r\n        }\r\n        else { // error\r\n            this.props.setInProgress(false);\r\n        }\r\n    };\r\n\r\n    deleteAndSave = (cell, row, rowIndex) => {\r\n        if (row !== null && row !== undefined) {\r\n            if (row.PRODUCT_ID === null || row.PRODUCT_ID === undefined || row.PRODUCT_ID === \"\") { // delete from cache\r\n                this.listProduct();\r\n            }\r\n            else {  // delete from db                \r\n                this.props.setInProgress(true);\r\n                deleteCall(LIST_PRODUCT.concat(\"/\").concat(row.PRODUCT_ID)).then(res => {\r\n                    if (res.status === 200) {\r\n                        this.listProduct();\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                    else {\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                })\r\n                .catch(exp => {\r\n                    this.props.setInProgress(false);\r\n                    console.log(exp);\r\n                });\r\n            }\r\n        }\r\n        else { // error\r\n            this.props.setInProgress(false);\r\n        }\r\n    };\r\n\r\n    saveAll = () => { };\r\n\r\n    actionButton = (cell, row, rowIndex) => {\r\n        return (\r\n            <ButtonGroup size=\"sm\">\r\n                <Button variant=\"success\" size=\"sm\" onClick={() => { this.updateAndSave(cell, row, rowIndex) }}><FaSave /></Button>\r\n                <Button variant=\"danger\" size=\"sm\" onClick={() => { this.deleteAndSave(cell, row, rowIndex) }}><FaTrash /></Button>\r\n            </ButtonGroup>\r\n        )\r\n    };\r\n\r\n    getTableColumn = (data) => {\r\n        if (data !== null && data !== undefined) {\r\n            var keys = Object.keys(data);\r\n\r\n            var columnsArray = keys.map(key => {\r\n                if (key === 'PROD_UNIT_ID' || key === 'PROD_COMPANY_ID') {\r\n\r\n                    var obj = {\r\n                        dataField: key,\r\n                        text: key=='PROD_UNIT_ID'? 'UNIT' : 'COMPANY',\r\n                        sort: true,\r\n                        filter: this.state.toggleFilter ? textFilter() : false,\r\n                        editor: {\r\n                            type: Type.SELECT\r\n                        },                        \r\n                        formatter : (cell)=>{  \r\n                                                         \r\n                            if(cell !== undefined && cell !==null && cell !==\"\"){                          \r\n                            \r\n                            var option=_.find(obj.editor.options,function(opn){                                  \r\n                                return opn.value==cell;                                \r\n                            }); \r\n\r\n                            if(option!==undefined)           \r\n                            return (option.label);\r\n                            }\r\n                        }\r\n                    };\r\n\r\n                    if (key === 'PROD_UNIT_ID') {\r\n                        obj.editor.options = this.getConfiguration(\"UNIT\");                        \r\n                    }\r\n                    else if (key === 'PROD_COMPANY_ID') {\r\n                        obj.editor.options = this.getConfiguration(\"COMPANY\");\r\n                    }                    \r\n                    return obj;\r\n                }\r\n                else if(key === 'ACTIVE_STATUS'){\r\n                    return {\r\n                    dataField: key,\r\n                    text: 'STATUS',\r\n                    sort: true,\r\n                    type:'bool',\r\n                    editor :{\r\n                        type: Type.CHECKBOX,\r\n                        value: 'true:false'\r\n                    },\r\n                    formatter : (cell)=>{  \r\n                        return cell ? (<Badge variant=\"success\">Active</Badge>) : (<Badge variant=\"danger\">InActive</Badge>)\r\n                    },\r\n                    filter: this.state.toggleFilter ? textFilter() : false\r\n                    };\r\n                }\r\n                else if(key === 'PRODUCT_RATE'){\r\n                    return {\r\n                    dataField: key,\r\n                    text: key,\r\n                    sort: true,                    \r\n                    \r\n                    formatter : (cell)=>{ \r\n                        \r\n                    //    var html= _.map(cell,function(item){\r\n                    //     return(<div>\r\n                    //             <input value={item.RATE}/>\r\n                    //             <input value={item.PRICE}/>\r\n                    //            </div>)\r\n                    //     })                  \r\n                        \r\n                    //      return html;\r\n\r\n                     return JSON.stringify(cell)\r\n                    },                    \r\n                    filter: this.state.toggleFilter ? textFilter() : false,\r\n                    editor:{\r\n                        type:Type.TEXTAREA\r\n                    },\r\n                    editable:false\r\n                    \r\n\r\n                    };\r\n                }\r\n               \r\n                else {\r\n                    return {\r\n                        dataField: key,\r\n                        text: key,\r\n                        sort: true,\r\n                        filter: this.state.toggleFilter ? textFilter() : false\r\n                    }\r\n                }\r\n            }\r\n            );\r\n\r\n            columnsArray.push({\r\n                text: \"ACTION\",\r\n                formatter: this.actionButton,\r\n                editable: false,\r\n                headerStyle: () => {\r\n                    return { width: \"6%\" };\r\n                },\r\n            });\r\n\r\n            return columnsArray\r\n        }\r\n        return [];\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid className=\"app-container\">\r\n                <Card>\r\n                    <Card.Header as=\"span\">Product\r\n                    <ButtonGroup size=\"sm\" style={{ float: \"right\", marginBottom: \"2px\" }}>\r\n                            <Button variant=\"success\" size=\"sm\" onClick={() => { this.addNewEmpltyRecord() }}><FaPlusCircle />  Add New</Button>\r\n                            <Button variant=\"success\" size=\"sm\" onClick={() => { this.toggleFilter() }}><FaFilter />  Filter</Button>\r\n                            <Button variant=\"success\" size=\"sm\" onClick={() => { this.saveAll() }}><FaSave />  Save All</Button>\r\n                        </ButtonGroup>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n\r\n                        {\r\n                            this.props.product !== undefined && this.props.product !== null &&\r\n                                this.props.product.data !== undefined && this.props.product.data !== null ? (\r\n                                    <div>\r\n                                        <BootstrapTable\r\n                                            keyField=\"PRODUCT_ID\"\r\n                                            data={this.props.product.data}\r\n                                            columns={this.getTableColumn(this.props.product.data[0])}\r\n                                            striped\r\n                                            bootstrap4\r\n                                            hover\r\n                                            condensed\r\n                                            tabIndexCell\r\n                                            filter={filterFactory()}\r\n                                            pagination={paginationFactory(pageinationOptions(this.props.product.data.length))}\r\n                                            headerWrapperClasses=\"tbl-head\"\r\n                                            cellEdit={cellEditFactory({\r\n                                                mode: 'click',\r\n                                                blurToSave: true\r\n                                            })}\r\n                                        />\r\n                                    </div>\r\n                                ) :\r\n                                null\r\n                        }\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setInProgress: flag => dispatch({ type: IN_PROGRESS, payload: flag }),\r\n    listProduct: data => dispatch({ type: SET_PRODUCT, payload: data }),\r\n    addNewEmpltyRecord: data => dispatch({ type: SET_PRODUCT, payload: data })\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    inProgress: state.config.inProgress,\r\n    configuration: state.config.configuration,\r\n    product: state.product.product\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Product);","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reducers\\customerReducer.js",["278","279"],"import {\r\n    SET_CUSTOMER\r\n} from '../constants/ActionConstants';\r\n\r\nconst initialState = {\r\n    van: []\r\n};\r\n\r\nfunction customerReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_CUSTOMER:\r\n            return {\r\n                ...state,\r\n                customer: action.payload\r\n            }\r\n            break;       \r\n    }\r\n    return state;\r\n}\r\n\r\nexport default customerReducer; ","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\customer\\Customer.js",["280","281","282"],"import React, { Component } from 'react';\r\nimport { getCall, putCall, postCall, deleteCall } from '../../service/RestClient';\r\nimport { Container, Card, Button, ButtonGroup , Badge } from 'react-bootstrap';\r\nimport { IN_PROGRESS } from '../../constants/ActionConstants';\r\nimport { connect } from \"react-redux\";\r\nimport { LIST_CUSTOMER } from '../../constants/AppConstants';\r\nimport { SET_CUSTOMER } from '../../constants/ActionConstants';\r\n\r\nimport { pageinationOptions, ACTIVE_STATUS_OPTIONS } from '../../util/tableUtil'\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport filterFactory, { textFilter } from 'react-bootstrap-table2-filter';\r\nimport paginationFactory from 'react-bootstrap-table2-paginator';\r\nimport cellEditFactory, { Type } from 'react-bootstrap-table2-editor';\r\nimport _ from 'underscore';\r\n\r\nimport { FaFilter, FaPlusCircle, FaSave, FaTrash } from 'react-icons/fa'\r\n\r\nclass Customer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            columns: [],\r\n            toggleFilter: false\r\n        };\r\n\r\n        this.updateAndSave.bind(this);\r\n        this.deleteAndSave.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.listCustomer();\r\n    }\r\n\r\n    listCustomer = () => {\r\n        this.props.setInProgress(true);\r\n        getCall(LIST_CUSTOMER).then(res => {\r\n            if (res.status === 200) {\r\n                this.props.listCustomer(res.data);\r\n                this.props.setInProgress(false);\r\n            }\r\n            else {\r\n                this.props.setInProgress(false);\r\n            }\r\n        })\r\n        .catch(exp => {\r\n            this.props.setInProgress(false);\r\n            console.log(exp);\r\n        });\r\n    };\r\n\r\n\r\n    getConfiguration = (type) => {\r\n        var array = _.filter(this.props.configuration.data, function (object) { return object.PROPERTY_TYPE === type; });\r\n        return _.map(array, function (object) {\r\n           return { value: object.PROPERTY_ID, label: object.PROPERTY_VALUE };\r\n        });\r\n    }\r\n\r\n    addNewEmpltyRecord = () => {\r\n\r\n        this.props.setInProgress(true);\r\n        var customerData = this.props.customer;\r\n        customerData.data.unshift({            \r\n                CUST_ID: null,\r\n                CUST_NAME: null,\r\n                SHOP_NAME: null,\r\n                CUST_CONTACT: null,\r\n                CUST_GST_NO: null,\r\n                CUST_ADDRESS: null,\r\n                OUTSTANDING: null,\r\n                CUST_DOB: null,\r\n                ACTIVE_STATUS: false\r\n        });\r\n        this.props.addNewEmpltyRecord(customerData);\r\n        this.props.setInProgress(false);\r\n    }\r\n\r\n    toggleFilter = () => {\r\n        this.setState({ toggleFilter: !this.state.toggleFilter });\r\n    };\r\n\r\n    updateAndSave = (cell, row, rowIndex) => {\r\n        this.props.setInProgress(true);\r\n        if (row !== null && row !== undefined) {\r\n            if (row.CUST_ID === null || row.CUST_ID === undefined || row.CUST_ID === \"\") { // add new record\r\n                var data = {};    \r\n                \r\n                data[\"CUST_ID\"] = row.CUST_ID;\r\n                data[\"CUST_NAME\"] = row.CUST_NAME;\r\n                data[\"SHOP_NAME\"] = row.SHOP_NAME;\r\n                data[\"CUST_CONTACT\"] = row.CUST_CONTACT;\r\n                data[\"CUST_GST_NO\"] = row.CUST_GST_NO;\r\n                data[\"CUST_ADDRESS\"] = row.CUST_ADDRESS;\r\n                data[\"OUTSTANDING\"] = row.OUTSTANDING;\r\n                data[\"CUST_DOB\"] = row.CUST_DOB;                \r\n                data[\"ACTIVE_STATUS\"] = false;\r\n\r\n                var _typeof = typeof row.ACTIVE_STATUS\r\n                if (_typeof === \"string\") {\r\n                    if (row.ACTIVE_STATUS === \"true\") { row.ACTIVE_STATUS = true; }\r\n                    else { row.ACTIVE_STATUS = false };\r\n                }\r\n                data[\"ACTIVE_STATUS\"] = row.ACTIVE_STATUS;\r\n\r\n                postCall(LIST_CUSTOMER, data).then(res => {\r\n                    if (res.status === 201) {\r\n                        this.listCustomer();\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                    else {\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                })\r\n                .catch(exp => {\r\n                    this.props.setInProgress(false);\r\n                    console.log(exp);\r\n                });\r\n            }\r\n            else { // update record\r\n                var data = {};\r\n\r\n                data[\"CUST_ID\"] = row.CUST_ID;\r\n                data[\"CUST_NAME\"] = row.CUST_NAME;\r\n                data[\"SHOP_NAME\"] = row.SHOP_NAME;\r\n                data[\"CUST_CONTACT\"] = row.CUST_CONTACT;\r\n                data[\"CUST_GST_NO\"] = row.CUST_GST_NO;\r\n                data[\"CUST_ADDRESS\"] = row.CUST_ADDRESS;\r\n                data[\"OUTSTANDING\"] = row.OUTSTANDING;\r\n                data[\"CUST_DOB\"] = row.CUST_DOB;                \r\n                data[\"ACTIVE_STATUS\"] = false;\r\n\r\n                var _typeof = typeof row.ACTIVE_STATUS\r\n                if (_typeof === \"string\") {\r\n                    if (row.ACTIVE_STATUS === \"true\") { row.ACTIVE_STATUS = true; }\r\n                    else { row.ACTIVE_STATUS = false };\r\n                }\r\n                data[\"ACTIVE_STATUS\"] = row.ACTIVE_STATUS;\r\n\r\n                putCall(LIST_CUSTOMER.concat(\"/\").concat(row.EMP_ID), data).then(res => {\r\n                    if (res.status === 200) {\r\n                        this.listCustomer();\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                    else {\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                })\r\n                .catch(exp => {\r\n                    this.props.setInProgress(false);\r\n                    console.log(exp);\r\n                });\r\n            }\r\n        }\r\n        else { // error\r\n            this.props.setInProgress(false);\r\n        }\r\n    };\r\n\r\n    deleteAndSave = (cell, row, rowIndex) => {\r\n        if (row !== null && row !== undefined) {\r\n            if (row.PRODUCT_ID === null || row.PRODUCT_ID === undefined || row.PRODUCT_ID === \"\") { // delete from cache\r\n                this.listCustomer();\r\n            }\r\n            else {  // delete from db                \r\n                this.props.setInProgress(true);\r\n                deleteCall(LIST_CUSTOMER.concat(\"/\").concat(row.PRODUCT_ID)).then(res => {\r\n                    if (res.status === 200) {\r\n                        this.listCustomer();\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                    else {\r\n                        this.props.setInProgress(false);\r\n                    }\r\n                })\r\n                .catch(exp => {\r\n                    this.props.setInProgress(false);\r\n                    console.log(exp);\r\n                });\r\n            }\r\n        }\r\n        else { // error\r\n            this.props.setInProgress(false);\r\n        }\r\n    };\r\n\r\n    saveAll = () => { };\r\n\r\n    actionButton = (cell, row, rowIndex) => {\r\n        return (\r\n            <ButtonGroup size=\"sm\">\r\n                <Button variant=\"success\" size=\"sm\" onClick={() => { this.updateAndSave(cell, row, rowIndex) }}><FaSave /></Button>\r\n                <Button variant=\"danger\" size=\"sm\" onClick={() => { this.deleteAndSave(cell, row, rowIndex) }}><FaTrash /></Button>\r\n            </ButtonGroup>\r\n        )\r\n    };\r\n\r\n    getTableColumn = (data) => {\r\n        if (data !== null && data !== undefined) {\r\n            var keys = Object.keys(data);\r\n\r\n            var columnsArray = keys.map(key => {\r\n                \r\n                 if(key === 'ACTIVE_STATUS'){\r\n                    return {\r\n                    dataField: key,\r\n                    text: 'STATUS',\r\n                    sort: true,\r\n                    type:'bool',\r\n                    editor :{\r\n                        type: Type.CHECKBOX,\r\n                        value: 'true:false'\r\n                    },\r\n                    formatter : (cell)=>{  \r\n                        return cell ? (<Badge variant=\"success\">Active</Badge>) : (<Badge variant=\"danger\">InActive</Badge>)\r\n                    },\r\n                    filter: this.state.toggleFilter ? textFilter() : false\r\n                    };\r\n                }\r\n                else if (key === 'CUST_DOB') {\r\n                    return {\r\n                        dataField: key,\r\n                        text: key,\r\n                        type:'date',\r\n                        filter: this.state.toggleFilter ? textFilter() : false,                        \r\n                        sort: true,\r\n                        headerStyle: () => {\r\n                            return { width: \"10%\" };\r\n                        },\r\n                        editor: {\r\n                            type: Type.DATE\r\n                        },\r\n                        formatter: (cell, row, rowIndex) => {\r\n                            \r\n                            var date = new Date(cell);\r\n                            var yyyy = date.getFullYear();\r\n                            var mm = date.getMonth() + 1;\r\n                            if (mm < 10) {\r\n                                mm = '0' + mm;\r\n                            }\r\n                            var dd = date.getDate();\r\n                            if (dd < 10) {\r\n                                dd = '0' + dd;\r\n                            }\r\n                            var ndt = yyyy + \"-\" + mm + \"-\" + dd;\r\n                            return ndt;\r\n                        },\r\n                        editable: true\r\n                    }\r\n                }\r\n                else {\r\n                    return {\r\n                        dataField: key,\r\n                        text: key,\r\n                        sort: true,\r\n                        filter: this.state.toggleFilter ? textFilter() : false\r\n                    }\r\n                }\r\n            }\r\n            );\r\n\r\n            columnsArray.push({\r\n                text: \"ACTION\",\r\n                formatter: this.actionButton,\r\n                editable: false,\r\n                headerStyle: () => {\r\n                    return { width: \"6%\" };\r\n                },\r\n            });\r\n\r\n            return columnsArray\r\n        }\r\n        return [];\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid className=\"app-container\">\r\n                <Card>\r\n                    <Card.Header as=\"span\">customer\r\n                    <ButtonGroup size=\"sm\" style={{ float: \"right\", marginBottom: \"2px\" }}>\r\n                            <Button variant=\"success\" size=\"sm\" onClick={() => { this.addNewEmpltyRecord() }}><FaPlusCircle />  Add New</Button>\r\n                            <Button variant=\"success\" size=\"sm\" onClick={() => { this.toggleFilter() }}><FaFilter />  Filter</Button>\r\n                            <Button variant=\"success\" size=\"sm\" onClick={() => { this.saveAll() }}><FaSave />  Save All</Button>\r\n                        </ButtonGroup>\r\n                    </Card.Header>\r\n                    <Card.Body>\r\n\r\n                        {\r\n                            this.props.customer !== undefined && this.props.customer !== null &&\r\n                                this.props.customer.data !== undefined && this.props.customer.data !== null ? (\r\n                                    <div>\r\n                                        <BootstrapTable\r\n                                            keyField=\"CUST_ID\"\r\n                                            data={this.props.customer.data}\r\n                                            columns={this.getTableColumn(this.props.customer.data[0])}\r\n                                            striped\r\n                                            bootstrap4\r\n                                            hover\r\n                                            condensed\r\n                                            tabIndexCell\r\n                                            filter={filterFactory()}\r\n                                            pagination={paginationFactory(pageinationOptions(this.props.customer.data.length))}\r\n                                            headerWrapperClasses=\"tbl-head\"\r\n                                            cellEdit={cellEditFactory({\r\n                                                mode: 'click',\r\n                                                blurToSave: true\r\n                                            })}\r\n                                        />\r\n                                    </div>\r\n                                ) :\r\n                                null\r\n                        }\r\n                    </Card.Body>\r\n                </Card>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setInProgress: flag => dispatch({ type: IN_PROGRESS, payload: flag }),\r\n    listCustomer: data => dispatch({ type: SET_CUSTOMER, payload: data }),\r\n    addNewEmpltyRecord: data => dispatch({ type: SET_CUSTOMER, payload: data })\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n    inProgress: state.config.inProgress,\r\n    configuration: state.config.configuration,\r\n    customer: state.customer.customer\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Customer);","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\reducers\\authReducer.js",["283","284"],"import {\r\n    SET_LOGIN_USER\r\n} from '../constants/ActionConstants';\r\n\r\nconst initialState = {\r\n    loginUser: {}\r\n};\r\n\r\nfunction authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case SET_LOGIN_USER:\r\n            return {\r\n                ...state,\r\n                loginUser: action.payload\r\n            }\r\n            break;       \r\n    }\r\n    return state;\r\n}\r\n\r\nexport default authReducer; ","E:\\VijayLokhande_SoftwareDevelopment\\Van-Distribution\\git\\UI\\van-distribution-app\\src\\components\\Auth.js",["285","286","287","288"],"import React, { Component } from 'react';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Spinner , Form , Col , Row ,Button} from 'react-bootstrap';\r\nimport { IN_PROGRESS, SET_LOGIN_USER } from '../constants/ActionConstants';\r\nimport { LOGIN } from '../constants/AppConstants';\r\nimport { connect } from \"react-redux\";\r\nimport { postCall } from '../service/RestClient';\r\n\r\nclass Auth extends Component {\r\n\r\n    constructor(props){\r\n        super();\r\n\r\n        this.state ={\r\n            username:\"\",\r\n            password:\"\"\r\n        }\r\n    }\r\n\r\n\r\n    doLogin = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        this.props.setInProgress(true);\r\n\r\n        const data={\r\n            username:this.state.username,\r\n            password:this.state.password\r\n        };\r\n\r\n\r\n        postCall(LOGIN, data).then(res => {\r\n            if (res.status === 200) {\r\n        \r\n                this.props.setLoginUser(res.data);\r\n                this.props.setInProgress(false);\r\n            }\r\n            else {\r\n                this.props.setInProgress(false);\r\n            }\r\n        })\r\n            .catch(exp => {\r\n                this.props.setInProgress(false);\r\n                console.log(exp);\r\n            });\r\n    };\r\n\r\n\r\n    handleChange=(event)=>{\r\n        this.setState({[event.target.id]: event.target.value});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <BrowserRouter>\r\n                    <div>\r\n                        <br/>\r\n                        <form onSubmit={this.doLogin}>\r\n                        <label>User Name</label> <br/>\r\n                        <input type=\"text\" data-test=\"username\" value={this.state.username} id=\"username\" onChange={this.handleChange} /><br/>\r\n                        <label>Password</label> <br/>\r\n                        <input type=\"password\" data-test=\"password\" value={this.state.password} id=\"password\" onChange={this.handleChange } /><br/><br/>\r\n                        <input type=\"submit\" value=\"Log In\" data-test=\"submit\" />\r\n                        </form>\r\n\r\n                         \r\n                    </div>\r\n                    {\r\n                        this.props.inProgress ?\r\n                            <div id=\"bd\" className=\"bd\">\r\n                                <Spinner animation=\"border\" variant=\"warning\" className=\"center-pos\" ><span className=\"sr-only\">Loading...</span></Spinner>\r\n                            </div>\r\n                            : null\r\n                    }\r\n                </BrowserRouter>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setInProgress: flag => dispatch({ type: IN_PROGRESS, payload: flag }),\r\n    setLoginUser: data => dispatch({ type: SET_LOGIN_USER, payload: data })\r\n});\r\nconst mapStateToProps = (state) => ({\r\n    inProgress: state.config.inProgress,\r\n    loginUser: state.auth.loginUser\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Auth);\r\n",{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","severity":1,"message":"294","line":1,"column":15,"nodeType":"295","messageId":"296","endLine":1,"endColumn":24},{"ruleId":"293","severity":1,"message":"297","line":4,"column":8,"nodeType":"295","messageId":"296","endLine":4,"endColumn":14},{"ruleId":"293","severity":1,"message":"298","line":3,"column":27,"nodeType":"295","messageId":"296","endLine":3,"endColumn":33},{"ruleId":"299","severity":1,"message":"300","line":122,"column":21,"nodeType":"295","messageId":"301","endLine":122,"endColumn":25},{"ruleId":"299","severity":1,"message":"302","line":134,"column":21,"nodeType":"295","messageId":"301","endLine":134,"endColumn":28},{"ruleId":"299","severity":1,"message":"300","line":109,"column":21,"nodeType":"295","messageId":"301","endLine":109,"endColumn":25},{"ruleId":"299","severity":1,"message":"302","line":114,"column":21,"nodeType":"295","messageId":"301","endLine":114,"endColumn":28},{"ruleId":"293","severity":1,"message":"298","line":3,"column":27,"nodeType":"295","messageId":"296","endLine":3,"endColumn":33},{"ruleId":"293","severity":1,"message":"303","line":3,"column":5,"nodeType":"295","messageId":"296","endLine":3,"endColumn":30},{"ruleId":"304","severity":1,"message":"305","line":13,"column":5,"nodeType":"306","messageId":"307","endLine":27,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":19,"column":13,"nodeType":"310","messageId":"311","endLine":19,"endColumn":19},{"ruleId":"308","severity":1,"message":"309","line":26,"column":13,"nodeType":"310","messageId":"311","endLine":26,"endColumn":19},{"ruleId":"304","severity":1,"message":"305","line":10,"column":5,"nodeType":"306","messageId":"307","endLine":17,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":16,"column":13,"nodeType":"310","messageId":"311","endLine":16,"endColumn":19},{"ruleId":"304","severity":1,"message":"305","line":10,"column":5,"nodeType":"306","messageId":"307","endLine":17,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":16,"column":13,"nodeType":"310","messageId":"311","endLine":16,"endColumn":19},{"ruleId":"304","severity":1,"message":"305","line":10,"column":5,"nodeType":"306","messageId":"307","endLine":17,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":16,"column":13,"nodeType":"310","messageId":"311","endLine":16,"endColumn":19},{"ruleId":"289","replacedBy":"312"},{"ruleId":"291","replacedBy":"313"},{"ruleId":"293","severity":1,"message":"294","line":1,"column":15,"nodeType":"295","messageId":"296","endLine":1,"endColumn":24},{"ruleId":"304","severity":1,"message":"305","line":10,"column":5,"nodeType":"306","messageId":"307","endLine":17,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":16,"column":13,"nodeType":"310","messageId":"311","endLine":16,"endColumn":19},{"ruleId":"304","severity":1,"message":"305","line":10,"column":5,"nodeType":"306","messageId":"307","endLine":17,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":16,"column":13,"nodeType":"310","messageId":"311","endLine":16,"endColumn":19},{"ruleId":"304","severity":1,"message":"305","line":10,"column":5,"nodeType":"306","messageId":"307","endLine":17,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":16,"column":13,"nodeType":"310","messageId":"311","endLine":16,"endColumn":19},{"ruleId":"293","severity":1,"message":"303","line":3,"column":5,"nodeType":"295","messageId":"296","endLine":3,"endColumn":30},{"ruleId":"304","severity":1,"message":"305","line":13,"column":5,"nodeType":"306","messageId":"307","endLine":27,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":19,"column":13,"nodeType":"310","messageId":"311","endLine":19,"endColumn":19},{"ruleId":"308","severity":1,"message":"309","line":26,"column":13,"nodeType":"310","messageId":"311","endLine":26,"endColumn":19},{"ruleId":"289","replacedBy":"314"},{"ruleId":"291","replacedBy":"315"},{"ruleId":"293","severity":1,"message":"316","line":9,"column":30,"nodeType":"295","messageId":"296","endLine":9,"endColumn":51},{"ruleId":"299","severity":1,"message":"300","line":108,"column":21,"nodeType":"295","messageId":"301","endLine":108,"endColumn":25},{"ruleId":"299","severity":1,"message":"302","line":114,"column":21,"nodeType":"295","messageId":"301","endLine":114,"endColumn":28},{"ruleId":"293","severity":1,"message":"298","line":3,"column":27,"nodeType":"295","messageId":"296","endLine":3,"endColumn":33},{"ruleId":"293","severity":1,"message":"316","line":9,"column":30,"nodeType":"295","messageId":"296","endLine":9,"endColumn":51},{"ruleId":"299","severity":1,"message":"300","line":122,"column":21,"nodeType":"295","messageId":"301","endLine":122,"endColumn":25},{"ruleId":"299","severity":1,"message":"302","line":134,"column":21,"nodeType":"295","messageId":"301","endLine":134,"endColumn":28},{"ruleId":"317","severity":1,"message":"318","line":193,"column":47,"nodeType":"319","messageId":"320","endLine":193,"endColumn":49},{"ruleId":"317","severity":1,"message":"318","line":219,"column":49,"nodeType":"319","messageId":"320","endLine":219,"endColumn":51},{"ruleId":"317","severity":1,"message":"318","line":317,"column":57,"nodeType":"319","messageId":"320","endLine":317,"endColumn":59},{"ruleId":"317","severity":1,"message":"318","line":319,"column":57,"nodeType":"319","messageId":"320","endLine":319,"endColumn":59},{"ruleId":"293","severity":1,"message":"316","line":6,"column":30,"nodeType":"295","messageId":"296","endLine":6,"endColumn":51},{"ruleId":"293","severity":1,"message":"321","line":12,"column":8,"nodeType":"295","messageId":"296","endLine":12,"endColumn":9},{"ruleId":"299","severity":1,"message":"300","line":109,"column":21,"nodeType":"295","messageId":"301","endLine":109,"endColumn":25},{"ruleId":"299","severity":1,"message":"302","line":114,"column":21,"nodeType":"295","messageId":"301","endLine":114,"endColumn":28},{"ruleId":"304","severity":1,"message":"305","line":10,"column":5,"nodeType":"306","messageId":"307","endLine":17,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":16,"column":13,"nodeType":"310","messageId":"311","endLine":16,"endColumn":19},{"ruleId":"293","severity":1,"message":"316","line":9,"column":30,"nodeType":"295","messageId":"296","endLine":9,"endColumn":51},{"ruleId":"299","severity":1,"message":"300","line":129,"column":21,"nodeType":"295","messageId":"301","endLine":129,"endColumn":25},{"ruleId":"299","severity":1,"message":"302","line":145,"column":21,"nodeType":"295","messageId":"301","endLine":145,"endColumn":28},{"ruleId":"317","severity":1,"message":"318","line":219,"column":34,"nodeType":"319","messageId":"320","endLine":219,"endColumn":36},{"ruleId":"317","severity":1,"message":"318","line":230,"column":49,"nodeType":"319","messageId":"320","endLine":230,"endColumn":51},{"ruleId":"304","severity":1,"message":"305","line":10,"column":5,"nodeType":"306","messageId":"307","endLine":17,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":16,"column":13,"nodeType":"310","messageId":"311","endLine":16,"endColumn":19},{"ruleId":"293","severity":1,"message":"316","line":9,"column":30,"nodeType":"295","messageId":"296","endLine":9,"endColumn":51},{"ruleId":"299","severity":1,"message":"300","line":121,"column":21,"nodeType":"295","messageId":"301","endLine":121,"endColumn":25},{"ruleId":"299","severity":1,"message":"302","line":133,"column":21,"nodeType":"295","messageId":"301","endLine":133,"endColumn":28},{"ruleId":"304","severity":1,"message":"305","line":10,"column":5,"nodeType":"306","messageId":"307","endLine":17,"endColumn":6},{"ruleId":"308","severity":1,"message":"309","line":16,"column":13,"nodeType":"310","messageId":"311","endLine":16,"endColumn":19},{"ruleId":"293","severity":1,"message":"322","line":3,"column":20,"nodeType":"295","messageId":"296","endLine":3,"endColumn":24},{"ruleId":"293","severity":1,"message":"323","line":3,"column":27,"nodeType":"295","messageId":"296","endLine":3,"endColumn":30},{"ruleId":"293","severity":1,"message":"324","line":3,"column":33,"nodeType":"295","messageId":"296","endLine":3,"endColumn":36},{"ruleId":"293","severity":1,"message":"298","line":3,"column":38,"nodeType":"295","messageId":"296","endLine":3,"endColumn":44},"no-native-reassign",["325"],"no-negated-in-lhs",["326"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Button' is defined but never used.","no-redeclare","'data' is already defined.","redeclared","'_typeof' is already defined.","'ADD_NEW_APP_CONFIGURATION' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unreachable","Unreachable code.","BreakStatement","unreachableCode",["325"],["326"],["325"],["326"],"'ACTIVE_STATUS_OPTIONS' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'_' is defined but never used.","'Form' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","no-global-assign","no-unsafe-negation"]